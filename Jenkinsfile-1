pipeline {
    agent any

    // environment {
    //     DOCKER_ACCESS_TOKEN = credentials('docker-hub')
    // }
    environment {
        PROJECT_ID = 'dotted-journey-374919'
        CLUSTER_NAME = 'k8-cluster'
        LOCATION = 'us-central1-c'
        CREDENTIALS_ID = 'GKE-new-Cred'
        NAMESPACE = 'default'
    }

    stages{
        stage('preparation') {
            steps {
                git 'https://github.com/ikaushikdas/tg-redirect.git'
            }
        }
        stage('Build Docker Image'){
           
            steps{
                script {
                dockerImage = docker.build("dotted-journey-374919/example-node-app:${BUILD_NUMBER}")  
                //dockerImage = docker.build("examplenode-app:latest")    
                }  

            }
        }

        stage('Publish to GCR'){
           
            steps{
                script {
                    docker.withRegistry("https://eu.gcr.io", "gcr:GKE-new-Cred") {
                        dockerImage.push()
                    }
                }
            }  

        }

        stage('Deploy to GKE'){
           
            steps{
                withCredentials([file(credentialsId: 'Sec-key', variable: 'GC_KEY')]) {
                    sh("""  gcloud auth activate-service-account --key-file="${GC_KEY}" && \
                            gcloud config set project "${PROJECT_ID}" && \
                            gcloud config set container/cluster "${CLUSTER_NAME}" && \
                            gcloud config set compute/zone "${LOCATION}" && \
                            gcloud container clusters get-credentials "${CLUSTER_NAME}" --zone "${LOCATION}" 
                        """)
                    //sh("cat ms1/deployment.yaml | envsubst | kubectl apply -f - ")
                    //sh("cat ms1/service.yaml | envsubst | kubectl apply -f - ")
                    sh "sed -i  's/tagversion/${BUILD_NUMBER}/g' ./k8/deployment.yaml"
                    sh "cat ./k8/deployment.yaml "
                    sh "kubectl apply -f ./k8/deployment.yaml"
                    sh "kubectl apply -f ./k8/ingress.yaml"
                }
                

                    // step([$class: 'KubernetesEngineBuilder',
                    //  projectId: env.PROJECT_ID,
                    //  clusterName: env.CLUSTER_NAME,
                    //  zone: env.LOCATION,
                    //  manifestPattern: './k8/deployment.yaml',
                    //  credentialsId: env.CREDENTIALS_ID,
                    //  verifyDeployments: true])

                    // step([$class: 'KubernetesEngineBuilder',
                    //  projectId: env.PROJECT_ID,
                    //  clusterName: env.CLUSTER_NAME,
                    //  zone: env.LOCATION,
                    //  manifestPattern: './k8/ingress.yml',
                    //  credentialsId: env.CREDENTIALS_ID,
                    //  verifyDeployments: true])
                
            }  

        }
        
        
        stage('Remove Image'){
           
            steps{
                    //sh 'docker rmi -f 116361412831.dkr.ecr.ap-south-1.amazonaws.com/node-app:latest'
                    sh 'docker rmi -f ikaushik96/example-node-app:$BUILD_NUMBER'

                } 

        }
        
    }
}